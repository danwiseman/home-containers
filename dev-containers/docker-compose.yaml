services:
  gitea:
    container_name: "gitea"
    hostname: "gitea"
    image: "gitea/gitea:latest"
    networks:
      - dev-apps
    ports:
      - "3000:3000/tcp"
    volumes:
      - "gitea_data:/data"

#  Data Engineering tools
  airflow-scheduler:
    image: docker.io/bitnami/airflow:2
    container_name: "airflow-scheduler"
    hostname: "airflow-scheduler"
    networks:
      - dev-apps
    environment:
      - AIRFLOW_COMPONENT_TYPE=scheduler
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_WEBSERVER_HOST=airflow
  airflow-worker:
    image: docker.io/bitnami/airflow:2
    container_name: "airflow-worker"
    hostname: "airflow-worker"
    networks:
      - dev-apps
    environment:
      - AIRFLOW_COMPONENT_TYPE=worker
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_EXECUTOR=CeleryExecutor
      - AIRFLOW_WEBSERVER_HOST=airflow
  airflow:
    image: docker.io/bitnami/airflow:2
    container_name: "airflow"
    hostname: "airflow"
    networks:
      - dev-apps
    environment:
      - AIRFLOW_DATABASE_NAME=bitnami_airflow
      - AIRFLOW_DATABASE_USERNAME=bn_airflow
      - AIRFLOW_DATABASE_PASSWORD=bitnami1
      - AIRFLOW_EXECUTOR=CeleryExecutor
    ports:
      - '8089:8080'
  nifi:
    container_name: "nifi"
    hostname: "nifi"
    image: "apache/nifi:2.1.0"
    networks:
      - dev-apps
    environment:
      - NIFI_WEB_HTTPS_PORT=9943
      - NIFI_WEB_HTTPS_HOST=nifi
      - NIFI_WEB_PROXY_HOST=${NIFI_PROXY_HOSTS:-nifi,nifi:9443}
      - NIFI_WEB_PROXY_CONTEXT_PATH=/
      - SINGLE_USER_CREDENTIALS_USERNAME=${NIFI_ADMIN_USER:-admin}
      - SINGLE_USER_CREDENTIALS_PASSWORD=${NIFI_ADMIN_PASS:-admin1234567890}
    ports:
      - "9943:9943/tcp"
    volumes:
      - "nifi_conf:/opt/nifi/nifi-current/conf"
      - "nifi_cr:/opt/nifi/nifi-current/content_repository"
      - "nifi_fr:/opt/nifi/nifi-current/flowfile_repository"
      - "nifi_dr:/opt/nifi/nifi-current/database_repository"
      - "nifi_pr:/opt/nifi/nifi-current/provenance_repository"
      - "nifi_logs:/opt/nifi/nifi-current/logs"
      - "nifi_state:/opt/nifi/nifi-current/state"
      - "comfyui_models:/opt/nifi/nifi-current/downloads/models"
  spark:
    image: docker.io/bitnami/spark:3.5
    hostname: "spark"
    container_name: "spark"
    networks:
      - dev-apps
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark
    ports:
      - '8088:8080'
  spark-worker:
    image: docker.io/bitnami/spark:3.5
    hostname: "sparkworker01"
    container_name: "sparkworker01"
    networks:
      - dev-apps
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
      - SPARK_USER=spark

#  Databases
  kafka:
    image: docker.io/bitnami/kafka:3.9
    hostname: "kafka"
    container_name: "kafka"
    networks:
      - dev-apps
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  elasticsearch:
    image: docker.io/bitnami/elasticsearch:8
    hostname: "elasticsearch"
    container_name: "elasticsearch"
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - dev-apps
    volumes:
      - 'elasticsearch_data:/bitnami/elasticsearch/data'
  mongodb:
    container_name: mongodb
    hostname: mongodb
    image: mongodb/mongodb-community-server:latest
    networks:
      - dev-apps
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=${NIFI_ADMIN_USER:-admin}
      - MONGODB_INITDB_ROOT_PASSWORD=${NIFI_ADMIN_PASS:-admin1234567890}
    ports:
      - "27017:27017/tcp"
    volumes:
      - "mongodb_data:/data/db"
#  airflow databases
  postgresql:
    image: docker.io/bitnami/postgresql:latest
    container_name: "postgresql"
    hostname: "postgresql"
    volumes:
      - 'postgresql_data:/bitnami/postgresql'
    networks:
      - dev-apps
    environment:
      - POSTGRESQL_DATABASE=bitnami_airflow
      - POSTGRESQL_USERNAME=bn_airflow
      - POSTGRESQL_PASSWORD=bitnami1
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
  redis:
    image: docker.io/bitnami/redis:latest
    container_name: "redis"
    hostname: "redis"
    volumes:
      - 'redis_data:/bitnami'
    networks:
      - dev-apps
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes


networks:
  dev-apps:
    external: true

volumes:
  gitea_data:
    external: true
  nifi_conf:
    external: true
  nifi_cr:
    external: true
  nifi_fr:
    external: true
  nifi_dr:
    external: true
  nifi_pr:
    external: true
  nifi_logs:
    external: true
  nifi_state:
    external: true
  kafka_data:
    external: true
  mongodb_data:
    external: true
  elasticsearch_data:
    external: true
  comfyui_models:
    external: true
  postgresql_data:
    external: true
  redis_data:
    external: true